/*!
 * SearchParams.js v0.1
 * (c) 2020 Shinigami
 * Released under the MIT License.
 */
!function(t,n){"use strict";"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t=t||self).SearchParams=n()}(this,function(){"use strict";function t(t){"?"===t[0]&&(t=t.slice(1)),-1===t.indexOf("=")&&(t=""),t=t.split("&").map(function(t){var n=t.indexOf("=");return-1==n?[t]:[t.slice(0,n),t.slice(n+1)]}),this.params=t}return t.prototype={append:function(t,n){this.params.push([t,n])},delete:function(t){this.params=this.params.filter(function(n){return n[0]!==t})},entries:function(){return this.params},forEach:function(t){this.params.map(function(t){return n={},r=t[0],e=t[1],r in n?Object.defineProperty(n,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[r]=e,n;var n,r,e}).forEach(t)},get:function(t){for(var n,r=this.params.length,e=0;e<r;){if(this.params[e][0]===t){n=this.params[e][1]||"";break}e++}return n},getAll:function(t){return this.params.filter(function(n){return n[0]===t}).map(function(t){return t[1]||""})},has:function(t){return this.params.some(function(n){return n[0]===t})},keys:function(){for(var t=this.params,n=t.length,r=0,e=[];r<n;)-1===t.indexOf(t[r][0])&&e.push(t[r][0]),r++;return e},set:function(t,n){var r=!1;this.params=this.params.filter(function(e,i,a){return(!r||e[0]!==t)&&(r||e[0]!==t||(e[1]=n,r=!0),!0)})},sort:function(t){"function"==typeof t&&(this.params=this.params.sort(t)),this.params=this.params.sort(function(t,n){return(t+"").charCodeAt(0)-(n+"").charCodeAt(0)})},toString:function(){return this.params.map(function(t){return t.join("=")}).join("&")},values:function(){return this.params.map(function(t){return t[1]||""})}},t});